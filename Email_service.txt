

email sending through spring boot:
---------------------------------

1. Add dependency

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

2. Configure SMTP services in application.properties

	# SMTP properties
spring.mail.host= smtp.gmail.com
spring.mail.port = 587
spring.mail.username = 
spring.mail.password= 
spring.mail.properties.mail.smtp.auth= true
spring.mail.properties.mail.smtp.starttls.enable =true

*note: password is generated by google account for "password for apps"

3. create EmailUtil class

		import org.springframework.beans.factory.annotation.Autowired;
		import org.springframework.mail.javamail.JavaMailSender;
		import org.springframework.mail.javamail.MimeMessageHelper;
		import org.springframework.stereotype.Component;

		import jakarta.mail.MessagingException;
		import jakarta.mail.internet.MimeMessage;

		@Component
		public class EmailUtils {

			@Autowired
			private JavaMailSender mailSender;
			
			public boolean sendMail(String to, String body, String subject) {
				MimeMessage mimeMesaage = mailSender.createMimeMessage();
				
				try {
					MimeMessageHelper mimeMessageHelper = new MimeMessageHelper(mimeMesaage, true);
					mimeMessageHelper.setSubject(subject);
					mimeMessageHelper.setTo(to);
					mimeMessageHelper.setText(body);
					mailSender.send(mimeMessageHelper.getMimeMessage());
					return true;
					
				} catch (MessagingException e) {
					e.printStackTrace();
				}
				
				return false;
				
			}
		}


4. Create a tempate for email
	
	
		Hi {FNAME},
		<br>

		Welcome ! Your registration is almost completed.
		Please use below details to unlock your account.
		<br>

		Temporary Password : {TEMP_PWD} <br>
		<a href="http://localhost:9000/unlockAcc?email={EMAIL}">

		Click here to unlock your account </a> <br>

		Thanks & Regards, <br>
		
		
5. Create a method to read the file

	
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Stream;

	public String readMailBody(String filename, User user) {
		
		String mailBody = null;
		StringBuffer buffer = new StringBuffer();
		
		Path path = Paths.get(filename);
		
		try(Stream<String> stream = Files.lines(path)){
			stream.forEach(line->{
				buffer.append(line);
			});
			
			mailBody = buffer.toString();
			mailBody = mailBody.replace("{FNAME}", user.getFirstname());
			mailBody = mailBody.replace("{LNAME}", user.getLastname());
			mailBody = mailBody.replace("{TEMP_PWD}", user.getPassword());
			mailBody = mailBody.replace("{EMAIL}", user.getEmail());
		}catch(Exception e) {
			e.printStackTrace();
		}
		return mailBody;
	}
	
6. Call the above method to send mail

		
	@Autowired
	private EmailUtils emailUtil;

	private boolean sendRegistrationEmail(User user) {
		 boolean emailSent = false;
		 String subject ="User registration successful";
		 //String body = readMailBody("emailTemplate.txt",user);
		 
		 String body ="<h1> Hello {user.getName()} !</h1> <br> Your temporary password is " + "";
		 emailUtil.sendMail(user.getEmail(), body, subject); 
		return emailSent;
	}		
